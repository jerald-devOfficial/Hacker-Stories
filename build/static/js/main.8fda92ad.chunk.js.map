{"version":3,"sources":["InputWithLabel.js","SearchForm.js","List.js","App.js","serviceWorker.js","index.js"],"names":["InputWithLabel","id","value","type","onInputChange","isFocused","children","inputRef","React","useRef","useEffect","current","focus","htmlFor","className","ref","onChange","SearchForm","searchTerm","onSearchInput","onSearchSubmit","onSubmit","disabled","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENT","reverse","POINT","Item","item","onRemoveItem","style","display","width","href","url","title","author","num_comments","points","onClick","size","List","useState","sortKey","isReverse","sort","setSort","handleSort","sortFunction","sortedList","map","objectID","PARAM_SEARCH","getUrl","page","storiesReducer","state","action","isLoading","isError","data","payload","concat","filter","story","Error","extractSearchTerm","substring","lastIndexOf","replace","LastSearches","lastSearches","onLastSearch","index","App","key","initialState","isMounted","localStorage","getItem","setValue","setItem","useSemiPersistentState","setSearchTerm","urls","setUrls","useReducer","stories","dispatchStories","handleFetchStories","useCallback","a","lastUrl","length","axios","get","result","hits","handleRemoveStory","handleSearch","reduce","slice","getLastSearches","sumComments","useMemo","getSumComments","event","target","preventDefault","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8fda92ad.chunk.js","sourcesContent":["import React from 'react';\n\nconst InputWithLabel = ({ id, value, type = 'text', onInputChange, isFocused, children }) => {\n  const inputRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isFocused]);\n\n  return (\n    <>\n      <label htmlFor={id} className=\"label\">\n        {children}\n      </label>\n      &nbsp;\n      <input\n        ref={inputRef}\n        id={id}\n        type={type}\n        value={value}\n        onChange={onInputChange}\n        className=\"input\"\n      />\n    </>\n  );\n};\n\nexport default InputWithLabel;\n","import React from 'react';\n\nimport InputWithLabel from './InputWithLabel';\n\nconst SearchForm = ({ searchTerm, onSearchInput, onSearchSubmit }) => (\n  <form onSubmit={onSearchSubmit} className=\"search-form\">\n    <InputWithLabel id=\"search\" isFocused onInputChange={onSearchInput} value={searchTerm}>\n      <strong>Search: </strong>\n    </InputWithLabel>\n\n    <button className=\"button button_large\" type=\"submit\" disabled={!searchTerm}>\n      Submit\n    </button>\n  </form>\n);\n\nexport default SearchForm;\n","import React, { useState } from 'react';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { sortBy } from 'lodash';\n\nconst SORTS = {\n  NONE: (list) => list,\n  TITLE: (list) => sortBy(list, 'title'),\n  AUTHOR: (list) => sortBy(list, 'author'),\n  COMMENT: (list) => sortBy(list, 'num_comments').reverse(),\n  POINT: (list) => sortBy(list, 'points').reverse()\n};\n\nconst List = ({ list, onRemoveItem }) => {\n  const [sort, setSort] = useState({ sortKey: 'NONE', isReverse: false });\n\n  const handleSort = (sortKey) => {\n    const isReverse = sort.sortKey === sortKey && !sort.isReverse;\n    setSort({ sortKey, isReverse });\n  };\n\n  const sortFunction = SORTS[sort.sortKey];\n  const sortedList = sort.isReverse ? sortFunction(list).reverse() : sortFunction(list);\n\n  return (\n    <div>\n      <div style={{ display: 'flex' }}>\n        <span style={{ width: '40%' }}>\n          <button type=\"button\" onClick={() => handleSort('TITLE')}>\n            Title\n          </button>\n        </span>\n        <span style={{ width: '30%' }}>\n          <button type=\"button\" onClick={() => handleSort('AUTHOR')}>\n            Author\n          </button>\n        </span>\n        <span style={{ width: '10%' }}>\n          <button type=\"button\" onClick={() => handleSort('COMMENT')}>\n            Comments\n          </button>\n        </span>\n        <span style={{ width: '10%' }}>\n          {' '}\n          <button type=\"button\" onClick={() => handleSort('POINT')}>\n            Points\n          </button>\n        </span>\n        <span style={{ width: '10%' }}>Actions</span>\n      </div>\n      {sortedList.map((item) => (\n        <Item key={item.objectID} item={item} onRemoveItem={onRemoveItem} />\n      ))}\n    </div>\n  );\n};\n\nconst Item = ({ item, onRemoveItem }) => (\n  <div className=\"item\" style={{ display: 'flex' }}>\n    <span style={{ width: '40%' }}>\n      <a href={item.url}>{item.title}</a>\n    </span>\n    <span style={{ width: '30%' }}>{item.author}</span>\n    <span style={{ width: '10%' }}>{item.num_comments}</span>\n    <span style={{ width: '10%' }}>{item.points}</span>\n    <span style={{ width: '10%' }}>\n      <button className=\"button button_small\" type=\"button\" onClick={() => onRemoveItem(item)}>\n        <CheckIcon size=\"sm\" />\n      </button>\n    </span>\n  </div>\n);\n\nexport default List;\n","import React from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport SearchForm from './SearchForm';\nimport List from './List';\n\nconst API_ENDPOINT = 'https://hn.algolia.com/api/v1/search?query=';\nconst API_BASE = 'https://hn.algolia.com/api/v1';\nconst API_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\n\n// careful: notice the ? and & in between\nconst getUrl = (searchTerm, page) =>\n  `${API_BASE}${API_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`;\n\nconst useSemiPersistentState = (key, initialState) => {\n  const isMounted = React.useRef(false);\n\n  const [value, setValue] = React.useState(localStorage.getItem(key) || initialState);\n\n  React.useEffect(() => {\n    if (!isMounted.current) {\n      isMounted.current = true;\n    } else {\n      localStorage.setItem(key, value);\n    }\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nconst storiesReducer = (state, action) => {\n  switch (action.type) {\n    case 'STORIES_FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case 'STORIES_FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data:\n          action.payload.page === 0 ? action.payload.list : state.data.concat(action.payload.list),\n        page: action.payload.page\n      };\n    case 'STORIES_FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    case 'REMOVE_STORY':\n      return {\n        ...state,\n        data: state.data.filter((story) => action.payload.objectID !== story.objectID)\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst extractSearchTerm = (url) =>\n  url.substring(url.lastIndexOf('?') + 1, url.lastIndexOf('&')).replace(PARAM_SEARCH, '');\n\nconst getLastSearches = (urls) =>\n  urls\n    .reduce((result, url, index) => {\n      const searchTerm = extractSearchTerm(url);\n\n      if (index === 0) {\n        return result.concat(searchTerm);\n      }\n\n      const previousSearchTerm = result[result.length - 1];\n\n      if (searchTerm === previousSearchTerm) {\n        return result;\n      } else {\n        return result.concat(searchTerm);\n      }\n    }, [])\n    .slice(-6)\n    .slice(0, -1);\n\nconst getSumComments = (stories) => {\n  return stories.data.reduce((result, value) => result + value.num_comments, 0);\n};\n\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useSemiPersistentState('search', 'React');\n\n  // important: still wraps the returned value in []\n  const [urls, setUrls] = React.useState([getUrl(searchTerm, 0)]);\n\n  const [stories, dispatchStories] = React.useReducer(storiesReducer, {\n    data: [],\n    page: 0,\n    isLoading: false,\n    isError: false\n  });\n\n  const handleFetchStories = React.useCallback(async () => {\n    dispatchStories({ type: 'STORIES_FETCH_INIT' });\n\n    try {\n      const lastUrl = urls[urls.length - 1];\n      const result = await axios.get(lastUrl);\n\n      dispatchStories({\n        type: 'STORIES_FETCH_SUCCESS',\n        payload: {\n          list: result.data.hits,\n          page: result.data.page\n        }\n      });\n    } catch {\n      dispatchStories({ type: 'STORIES_FETCH_FAILURE' });\n    }\n  }, [urls]);\n\n  React.useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]);\n\n  const handleRemoveStory = React.useCallback((item) => {\n    dispatchStories({\n      type: 'REMOVE_STORY',\n      payload: item\n    });\n  }, []);\n\n  const handleSearchInput = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSearchSubmit = (event) => {\n    handleSearch(searchTerm, 0);\n\n    event.preventDefault();\n  };\n\n  const handleLastSearch = (searchTerm) => {\n    setSearchTerm(searchTerm);\n\n    handleSearch(searchTerm, 0);\n  };\n\n  const handleSearch = (searchTerm, page) => {\n    const url = getUrl(searchTerm, page);\n    setUrls(urls.concat(url));\n  };\n\n  const handleMore = () => {\n    const lastUrl = urls[urls.length - 1];\n    const searchTerm = extractSearchTerm(lastUrl);\n    handleSearch(searchTerm, stories.page + 1);\n  };\n\n  const lastSearches = getLastSearches(urls);\n\n  const sumComments = React.useMemo(() => getSumComments(stories), [stories]);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"headline-primary\">My Hacker Stories with {sumComments} comments.</h1>\n      <SearchForm\n        searchTerm={searchTerm}\n        onSearchInput={handleSearchInput}\n        onSearchSubmit={handleSearchSubmit}\n      />\n\n      <LastSearches lastSearches={lastSearches} onLastSearch={handleLastSearch} />\n\n      {stories.isError && <p>Something went wrong ...</p>}\n\n      <List list={stories.data} onRemoveItem={handleRemoveStory} />\n\n      {stories.isLoading ? (\n        <p>Loading ... </p>\n      ) : (\n        <button type=\"button\" onClick={handleMore}>\n          More\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst LastSearches = ({ lastSearches, onLastSearch }) => (\n  <>\n    {lastSearches.map((searchTerm, index) => (\n      <button key={searchTerm + index} type=\"button\" onClick={() => onLastSearch(searchTerm)}>\n        {searchTerm}\n      </button>\n    ))}\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}